MONGO_URI=mongodb://keystonejs_user:my_password@cluster0-shard-00-00-qfovx.mongodb.net:27017,cluster0-shard-00-01-qfovx.mongodb.net:27017,cluster0-shard-00-02-qfovx.mongodb.net:27017/clusterdb?ssl=true&authSource=admin
view rawMONGO_URI hosted with ❤ by GitHub
The URI contains these components:

keystonejs_user is the name of the user you created in the MongoDB Atlas UI
my_password is the password you chose when creating the user in MongoDB Atlas
cluster0-shard-00-00-qfovx.mongodb.net, cluster0-shard-00-01-qfovx.mongodb.net, & cluster0-shard-00-02-qfovx.mongodb.net are the hostnames of the instances in your MongoDB Atlas replica set (click on the “CONNECT” button in the MongoDB Atlas UI if you don’t have these)
27017 is the standard MongoDB port number
clusterdb is the name of the database (schema) that KeystoneJS will use (note that this must match the project name used when installing KeystoneJS as well as the database you granted the user access to)
To enforce security, MongoDB Atlas mandates that the ssl option is used
admin is the database that’s being used to store the credentials for keystonejs_user
Clients connect to KeystoneJS through port 3000 and so you must open that port in your firewall.

You can then start KeystoneJS:

$ node keystone
$ node keystone
view rawStartKeystoneJS hosted with ❤ by GitHub
Testing the Configuration
Browse to the application at http://address-of-app-server:3000 as shown in Figure 2.

KeystoneJS Running on MongoDB Atlas
Figure 2: KeystoneJS Running on MongoDB Atlas

Sign in using the credentials shown and then confirm that you can upload some images to a gallery and create a new page as shown in Figure 3.

Create a Page in KeystoneJS with Data Stored in MongoDB Atlas
Figure 3: Create a Page in KeystoneJS with Data Stored in MongoDB Atlas

After saving the page, confirm that you can browse to the newly created post (Figure 4).

View KeystoneJS Post with Data Read from MongoDB Atlas
Figure 4: View KeystoneJS Post with Data Read from MongoDB Atlas

Optionally, confirm that, MongoDB Atlas really is being used by KeystoneJS, you can connect using the MongoDB shell:

$ sudo yum install mongodb-org-shell
$ mongo mongodb://cluster0-shard-00-00-qfovx.mongodb.net:27017,cluster0-shard-00-01-qfovx.mongodb.net:27017,cluster0-shard-00-02-qfovx.mongodb.net:27017/admin?replicaSet=Cluster0-shard-0 --ssl --username billy --password XXXXXX

Cluster0-shard-0:PRIMARY> show dbs
admin      0.000GB
clusterdb  0.000GB
local      0.000GB
Cluster0-shard-0:PRIMARY> use clusterdb
switched to db clusterdb
Cluster0-shard-0:PRIMARY> show collections
Cannot use 'commands' readMode, degrading to 'legacy' mode
app_updates
galleries
postcategories
posts
users

Cluster0-shard-0:PRIMARY> db.users.findOne()
{
    "_id" : ObjectId("5790829fa585c9cf10080d40"),
    "isAdmin" : true,
    "password" : "$2a$10$RmXv35cYu7V8fY.ZV/hJy.fFo7zjj.EwBsaTErMdVtG8MAhybJJUi",
    "email" : "a@clusterdb.com",
    "name" : {
        "last" : "User",
        "first" : "Admin"
    },
    "__v" : 0
}
view rawCheckKeystoneJSDatabase hosted with ❤ by GitHub
To visually navigate through the schema and data created by KeystoneJS, download and install MongoDB Compass. The same credentials can be used to connect Compass to your MongoDB database – Figure 5.

Connect MongoDB Compass to MongoDB Atlas Database
Figure 5: Connect MongoDB Compass to MongoDB Atlas Database

Navigate through the structure of the data in the clusterdb database (Figure 6) and view the JSON documents (Figure 7).

Explore KeystoneJS Schema Using MongoDB Compass
Figure 6: Explore KeystoneJS Schema Using MongoDB Compass

View Documents Stored by KeystoneJS Using MongoDB Atlas
Figure 7: View Documents Stored by KeystoneJS Using MongoDB Atlas

Next Steps
While MongoDB Atlas radically simplifies the operation of MongoDB there are still some decisions to take to ensure the best performance and reliability for your application. The MongoDB Atlas Best Practices white paper provides guidance on best practices for deploying, managing, and optimizing the performance of your database with MongoDB Atlas.

The guide outlines considerations for achieving performance at scale with MongoDB Atlas across a number of key dimensions, including instance size selection, application patterns, schema design and indexing, and disk I/O. While this guide is broad in scope, it is not exhaustive. Following the recommendations in the guide will provide a solid foundation for ensuring optimal application performance.

Bewaren

 
 
inShare
 

Category: MongoDB | Tags: CMS, javascript, KeystoneJS, mongodb, MongoDB Atlas, node.js
Leave a Reply
Your email address will not be published. Required fields are marked *

Comment 

Name * 

Email * 

Website 


keystone
 
Recent Posts
MongoDB Stitch – the latest, and best way to build your app
Webinar Replay: Developing with the modern App Stack: MEAN and MERN (with Angular2 and ReactJS)
Webinar: Developing with the modern App Stack: MEAN and MERN (with Angular2 and ReactJS)
The Modern Application Stack – Part 6: Browsers Aren’t the Only UI – Mobile Apps, Amazon Alexa, Cloud Services
The Modern Application Stack – Part 5: Using ReactJS, ES6 & JSX to Build a UI (the rise of MERN)

 
Recent Comments
andrew on Setting up MySQL Asynchronous Replication for High Availability
Betty on Setting up MySQL Asynchronous Replication for High Availability
Sai Krishnan on Get MySQL Replication up and running in 5 minutes
Nayan on Get MySQL Replication up and running in 5 minutes
changs on MySQL Cluster running on Raspberry Pi
Categories
Me
MongoDB
MySQL
MySQL Cluster
MySQL Fabric
MySQL Replication
Uncategorized
Tags
7.3 7.4 Apache Kafka Cluster fabric HA High Availability Java javascript JPA MCM MEAN Memcached microservices mongodb MongoDB 3.2 MongoDB Atlas MySQL MySQL 5.6 MySQL Cluster MySQL Cluster 7.0 MySQL Cluster 7.1 MySQL Cluster 7.2 MySQL Cluster 7.3 MySQL Cluster 7.4 MySQL Cluster CGE MySQL Cluster Manager MySQL Enterprise Monitor mysql fabric MySQL Replication MySQL Utilities NDB API ndbinfo node.js NoSQL Oracle Virtual Machine Performance RADIUS Replication secondary sharding Webcast webinar White Paper Windows
twitterfacebookgooglepluslinkedinflickryoutube
Archives
September 2017
March 2017
February 2017
January 2017
COOKIE_SECRET=e0ebd21e0d0606e5325043514a7392eb2052b358463658bf704dc930f59b476f17e02e8205cc6f5b184f46e99900a26ccfe9dec8f0c598b9617c77c0cc35553a
CLOUDINARY_URL=cloudinary://333779167276662:_8jbSi9FB3sWYrfimcl8VKh34rI@keystone-demo

# You will need to provide a MAILGUN_API_KEY and MAILGUN_DOMAIN to
# get email sending working.

